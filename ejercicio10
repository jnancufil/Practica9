/**
using System.IO; 
using System.Collections.Generic; 

StreamReader sr = new StreamReader("algunTxt.txt");
Textos listaT = new Textos(); 
if (!sr.EndOfStream) listaT.AgregarTexto(0, sr.ReadToEnd()); 

List<string> both = l1.Intersec(l2); 
List<PalabraPosiciones> nuevaLista = both.ConverterAll (new Converter<string, PalabraPosiciones>(strToPalabrasPosciciones)); 

public static PalabrasPosiciones strToPalabrasPosiciones(string elem){
  PalabraPosiciones aux = new PalabraPosiciones(elem);
  for (int i= 0; i <= listaT.Count; i++){
		 aux.buscarYAgregarPosiciones(listaT[i], i);
		}
  
  
  return aux; 
}

class PalabraPosiciones{
    public string Palabra {private set; get; }
    public List<List<int>> Posiciones {private set; get; }= new List<List<int>>(); 
    
    public PalabraPosiciones(){}
    pulic PalabraPosiciones(string elem) => Palabra = elem; 

public void buscarYAgregarPosiciones(string unText, int nroLista){
	int end = unText.Length; 
	int ini = 0; 
	int at; 
	while ((ini <= end) && (at > -1)){
		at = unText.IndexOf (Palabra, ini, end); 
		if (at == -1) break;
		Posiciones[nroLista].Add(at);
		ini = at+1; 
	}
}
class Textos{
	public List<string> listaDeTextos {private set; get} = new List<string>(); 
	
	public Textos(){}
	public Textos(string unTxt) => listaDeTextos.Add(unTxt); 
	
	public void AgregarTexto( string unTxt) => listaDeTextos.Add(unTxt); 
	
}
}
StreamReader 
